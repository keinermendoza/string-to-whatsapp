---
import PrimaryButton from '../components/PrimaryButton.astro';
import Layout from '../layouts/Layout.astro';
---

<Layout>
	
	<section class="container">
		<a class="tag link" target="_blank" href="https://keinermendoza.com">Created by Keiner Mendoza</a>
		<div class="main-card">
			<div class="flex-col input-section">
				<div>
					<div class="mb-4">
						<label for="phone-number">Phone Number</label>
						<input id="phone-number" class="input" type="text">
					</div>
					<div class="mb-4">
						<label for="input-message">Input Message</label>
						<textarea id="input-message" class="input"  rows="10" cols="30"></textarea>	
					</div>
				</div>

				<PrimaryButton id="button-encode">Traducir</PrimaryButton>	
			</div>
			<div class="flex-col output-section">
				<div class="mb-4">
					<label for="output-message">Output Message</label>
					<textarea id="output-message" class="input"  rows="15" cols="30"></textarea>	
				</div>
				<PrimaryButton id="copy-to-clipboard">Copy Result</PrimaryButton>	
				<span id="tag" class="tag toast">Copied!</span>
			</div>
		</div>
		<a class="tag link" target="_blank" href="https://www.svgbackgrounds.com/set/free-svg-backgrounds-and-patterns/">background from SVGBackgrounds.com</a>
	</section>	
	
</Layout>


<script>
	function encodeMessage(message: string, telephoneNumber: string) {
		const encodedMessage = encodeURIComponent(message);
		const number = telephoneNumber.trim();
		return `https://wa.me/${number}?text=${encodedMessage}`;
	}

	function copyCode(result: string, toast: HTMLSpanElement) {
		navigator.clipboard.writeText(result).then(() => {{
			toast.classList.add('active');
			setTimeout(() => {{ toast.classList.remove('active') }}, 2000);
		}});
	}


	const phone = document.getElementById('phone-number') as HTMLInputElement;
	const message = document.getElementById('input-message') as HTMLTextAreaElement;
	const result = document.getElementById('output-message') as HTMLTextAreaElement;
	const buttonAction = document.getElementById('button-encode');
	const buttonCopy = document.getElementById('copy-to-clipboard');
	const toast = document.getElementById('toast');


	if(buttonAction) {
		buttonAction.addEventListener('click', () => {
			if (message?.value && phone?.value && buttonAction && result) {
				const resultMessage = encodeMessage(message.value, phone.value);
				result.value = resultMessage;
			}
		}); 
	}

	if(buttonCopy && toast) {
		buttonCopy.addEventListener('click', () => {
			if (result?.value) {
				copyCode(result.value, toast);
			}
		})
	}



	
</script>

<style>
/* by algolia https://getcssscan.com/css-buttons-examples */
	.mb-4 {
		margin-bottom: 1rem; 
	}

	.tag {
		padding: 0.25em 0.5em;
		border-radius: 0.25em ;
		background-color: rgba(0,0,0,.7);
		width: fit-content;
		color: white
	}

	.link {
		text-underline-offset: 0.3em;
	}

	.input-section,
	.output-section {
		padding: 1rem;;
	}
	.output-section {position: relative;}
	.toast {
		position: absolute;
		top: 1rem;
		right: 1rem;
		opacity: 0;
		transition: opacity 0.2s;
	}
	.toast.active {
		opacity: 1;
	}

	.flex-col {
		display: flex;
		width: 100%;
		flex-direction: column;
		justify-content: space-between;
		gap: 0.5rem;
		height: auto;
	}
	label {
		display: block;
		margin-bottom: 0.5rem;
	}

	.input {
		padding: 0.65em 1em;
		width: 100%;
		border-radius: 0.35em;
		border: solid black 1px;
	}

	.container {
		width: 100%;
		height: auto;
		max-width: 68rem;
		border-radius: 1rem;
		padding: 1rem;;
		background-color: white ;
		-webkit-box-shadow: 0px 3px 10px -2px #476385;
		-moz-box-shadow: 0px 3px 10px -2px #476385;
		box-shadow: 0px 3px 10px -2px #476385;
	}
	.main-card {
		background-color: white;
		width: 100%;
		display: flex;
		flex-direction: column;
		gap:1rem;
		height: 100%;
		width: 100%;

	}

	@media (min-width:48rem) {
		.main-card {
			flex-direction: row;
		}

		.flex-col {
			height: 100%;
		}
	}

</style>